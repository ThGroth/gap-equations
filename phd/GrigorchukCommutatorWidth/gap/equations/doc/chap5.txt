  
  [1X5 [33X[0;0YFR-Equations[133X[101X
  
  
  [1X5.1 [33X[0;0YDecomposable equations[133X[101X
  
  [33X[0;0YFor  self-similar  groups one strategy to solve equations is to consider the
  inherit  equations  by passing to states. To use this methods the package FR
  ([Bar16]) from Laurent Bartholdi is needed.[133X
  
  [33X[0;0YLet  [22XG[122X  be  a  group which lies in the filter [3XIsFRGroup[103X and which admitts an
  embedding  [22XÏˆ:  G -> tilde Gâ‰€ S_n[122X where [22Xtilde G[122X is the group generated by the
  states  of the group [22XG[122X. Note that if [22XG[122X is a [13Xself-similar[113X group then [22XGâ‰ƒ tilde
  G[122X.  Further  let  [22XF_X[122X  be  the  free group on the generating set [22XX[122X. Given an
  equation group [22XG*F_X[122X we will the fix [22Xn[122X natural embeddings [22XÏ†_i: F-> F_X^n[122X and
  call  the  group  [22X(tilde G*F_X^n)â‰€ S_n )[122X the [13Xdecomposition equation group[113X of
  [22XG*F_X[122X.  The  decomposition of an equation [22Xe[122X with variables [22Xx_1,... ,x_k[122X with
  respect  to  a choice of activities [22XÏƒ(x_i)âˆˆ S_n[122X for each variable [22Xx_i[122X is the
  image of [22Xe[122X under the homomorphism[133X
  
        [22XÎ¦_Ïƒ: G*F_X[122X   [22X-> (tilde G*(F_X^n)â‰€ S_n[122X
               [22Xx_i[122X   [22Xâ†¦Ï†_i(x_i)â‹…Ïƒ(x_i)[122X        
                 [22Xg[122X   [22Xâ†¦Ïˆ_i(x_i)[122X               
  
  [1X5.1-1 DecompositionEquationGroup[101X
  
  [29X[2XDecompositionEquationGroup[102X( [3XG[103X ) [32X operation
  [6XReturns:[106X  [33X[0;10YA new [3XEquationGroup[103X.[133X
  
  [33X[0;0YThis  method needs [3XG[103X to be an equation group where the group of constants is
  an    fr-group.   For   [3XG[103X   a   group   with   free   constant   group   see
  [2XDecompositionEquationGroup[102X.  If  [22XF[122X is the free group on the generating set [22XX[122X
  then the free group on the gerating set [22XX^n[122X is isomorphic to [22XF^*n[122X the [22Xn[122X-fold
  free product of [22XF[122X .[133X
  
  [33X[0;0YThis method returns the [3XEquationGroup[103X [22XG*F^*n[122X.[133X
  
  [29X[2XDecompositionEquationGroup[102X( [3XG[103X, [3Xdeg[103X, [3Xacts[103X ) [32X operation
  [6XReturns:[106X  [33X[0;10YA new [3XEquationGroup[103X.[133X
  
  [33X[0;0YThis  method needs [3XG[103X to be an equation group where the group of constants is
  a free group on [22Xn<âˆž[122X generators. The integer [3Xdeg[103X is the number of states each
  element  will  have.  The  list  [3Xacts[103X should be of length [22Xn[122X and all elements
  should  be permutation of [3Xdeg[103X elements. These will represent the activity of
  the generators of the free group.[133X
  
  [1X5.1-2 DecompositionEquation[101X
  
  [29X[2XDecompositionEquation[102X( [3XG[103X, [3XE[103X, [3Xsigma[103X ) [32X operation
  [6XReturns:[106X  [33X[0;10YA new equation in [3XG[103X which is the decomposed of the equation [3XE[103X.[133X
  
  [33X[0;0YThe group [3XG[103X needs to be a [3XDecompositionEqationGroup(H)[103X, the equation [3XE[103X needs
  to be a member of the EquationGroup [22XH=K*F[122X.[133X
  
  [33X[0;0YThe   argument   [3Xsigma[103X  needs  to  be  a  group  homomorphism  [22XÏƒ:  F->  S_n[122X.
  Alternatively it can be a list of elements of [22XS_n[122X it is then regarded as the
  group  homomorphism that maps the [22Xi[122X-th variable of [3Xeq[103X to the [22Xi[122X-th element of
  the list.[133X
  
  [33X[0;0YThe representation of the returned equation stores a list of words such that
  the [22Xi[122X-th word represents an element in [22XG*Ï•_i(F)[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XF := FreeGroup(1);; SetName(F,"F");[127X[104X
    [4X[25Xgap>[125X [27XG := EquationGroup(GrigorchukGroup,F);[127X[104X
    [4X[28XGrigorchukGroup*F[128X[104X
    [4X[25Xgap>[125X [27XDG := DecompositionEquationGroup(G);[127X[104X
    [4X[28XGrigorchukGroup*F*F[128X[104X
    [4X[25Xgap>[125X [27X sigma := GroupHomomorphismByImages(F,SymmetricGroup(2),[(1,2)]);[127X[104X
    [4X[28X[ f1 ] -> [ (1,2) ][128X[104X
    [4X[25Xgap>[125X [27X e := Equation(G,[F.1^2,GrigorchukGroup.2]);[127X[104X
    [4X[28XEquation in [ f1 ][128X[104X
    [4X[25Xgap>[125X [27X de := DecompositionEquation(DG,e,sigma);[127X[104X
    [4X[28XDecomposedEquation in [ f11, f12 ][128X[104X
    [4X[25Xgap>[125X [27XPrint(de);[127X[104X
    [4X[28XEquation([ FreeProductElm([ f11*f12,a ]), FreeProductElm([ f12*f11,c ]) ])[128X[104X
  [4X[32X[104X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XF := FreeGroup("x1","x2");; SetName(F,"F");[127X[104X
    [4X[25Xgap>[125X [27XG := FreeGroup("g");; SetName(G,"G");[127X[104X
    [4X[25Xgap>[125X [27XeG := EquationGroup(G,F);[127X[104X
    [4X[28XG*F[128X[104X
    [4X[25Xgap>[125X [27XDeG := DecompositionEquationGroup(eG,2,[(1,2)]);[127X[104X
    [4X[28XG*G*F*F[128X[104X
    [4X[25Xgap>[125X [27X e := Equation(eG,[Comm(F.1,F.2),G.1^2]);[127X[104X
    [4X[28XEquation in [ x1, x2 ][128X[104X
    [4X[25Xgap>[125X [27X Print(DecompositionEquation(DeG,e,[(),()]));[127X[104X
    [4X[28XEquation([ FreeProductElm([ x11^-1*x21^-1*x11*x21, g1*g2 ]), [128X[104X
    [4X[28X FreeProductElm([ x12^-1*x22^-1*x12*x22, g2*g1 ]) ])[128X[104X
  [4X[32X[104X
  
  [1X5.1-3 EquationComponent[101X
  
  [29X[2XEquationComponent[102X( [3XE[103X, [3Xi[103X ) [32X operation
  [6XReturns:[106X  [33X[0;10YThe [3Xi[103X-th component of the decomposed equation [3XE[103X.[133X
  
  [33X[0;0YDenote  by [22Xp_i[122X the natural projection [22X(G*F_X^n)^nâ‹Š S_n-> G*F_X^n[122X to the [22Xi[122X-th
  factor  of  the product. Given a decomposed Equation [3XE[103X and an integer [22X0<[122X[3Xi[103X[22Xâ‰¤ n[122X
  this method returns [22Xp_i(E)[122X.[133X
  
  [29X[2XEquationComponents[102X( [3XE[103X ) [32X operation
  [6XReturns:[106X  [33X[0;10YThe list of all components of the decomposed equation [3XE[103X.[133X
  
  [33X[0;0YDenote  by  [22Xp_i[122X the natural projection [22Xp_i:(G*F_X^n)^nâ‹Š S_n-> G*F_X^n[122X to the
  [22Xi[122X-th  factor  of  the  product.  Given  a  decomposed Equation [3XE[103X this method
  returns the list [22X[p_1(E),p_2(E),...,p_n(E)][122X.[133X
  
  [29X[2XEquationActivity[102X( [3XE[103X ) [32X operation
  [6XReturns:[106X  [33X[0;10YThe activity of the decomposed equation [3XE[103X.[133X
  
  [33X[0;0YDenote  by  [22Xact[122X  the  natural  projection  [22X(G*F_X^n)â‰€  S_n->  S_n[122X.  Given  a
  decomposed Equation [3XE[103X this method returns [22Xact(E)[122X.[133X
  
  [1X5.1-4 DecomposedEquationDisjointForm[101X
  
  [29X[2XDecomposedEquationDisjointForm[102X( [3XE[103X ) [32X operation
  [6XReturns:[106X  [33X[0;10YA record with components [3Xeq[103X and [3Xhom[103X.[133X
  
  [33X[0;0YIf  [3XE[103X  is  a  decomposed  equation  there  may  be  an overlap of the set of
  variables  of  some  components.  If  [3XE[103X  is a quadratic equation there is an
  equation  homomorphism  [22XÏ†[122X  that  maps  each  component  to  a  new quadratic
  equation.  Hence  all  maped  components  have  pairwise  disjoint  sets  of
  variables.  This  method  computes  such  an  homomorphism  [22XÏ†[122X  such that the
  solvability  of  the  system  of  components  remains  unchanged.  If [22Xs[122X is a
  solution  for  the  new system of components, then [22Xsâˆ˜Ï†[122X is a solution for the
  old system.[133X
  
  [33X[0;0YThe  method  returns a record with two components. [3Xhom[103X is the homomorphism [22XÏ†[122X
  and [3Xeq[103X the new decomposed equation.[133X
  
  [1X5.1-5 LiftSolution[101X
  
  [29X[2XLiftSolution[102X( [3XDE[103X, [3XE[103X, [3Xsigma[103X, [3Xsol[103X ) [32X operation
  [6XReturns:[106X  [33X[0;10YAn evaluation for E [3Xeq[103X.[133X
  
  [33X[0;0YGiven  an equation [3XE[103X and a solution [3Xsol[103X for its decomposed equation [3XDE[103X under
  the  decomposition  with  activity [3Xsigma[103X this method computes a solution for
  the equation [3XE[103X.[133X
  
  [33X[0;0YNote  that  the solution not neccecarily maps to the group of constants of [3XE[103X
  but  can  map  to the group where all elements of the group of constants can
  appear as states. If the group of constants is layered, this two groups will
  coincide.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XF := FreeGroup(2);; SetName(F,"F");[127X[104X
    [4X[25Xgap>[125X [27XGr := GrigorchukGroup;; a:=Gr.1;; d:=Gr.4;;[127X[104X
    [4X[25Xgap>[125X [27XG := EquationGroup(Gr,F);;[127X[104X
    [4X[25Xgap>[125X [27XDG := DecompositionEquationGroup(G);;[127X[104X
    [4X[25Xgap>[125X [27X sigma := GroupHomomorphismByImages(F,SymmetricGroup(2),[(1,2),()]);[127X[104X
    [4X[28X[ f1, f2 ] -> [ (1,2), () ][128X[104X
    [4X[25Xgap>[125X [27X e := Equation(G,[Comm(F.1,F.2),Comm(d,a)]);[127X[104X
    [4X[28XEquation in [ f1, f2 ][128X[104X
    [4X[25Xgap>[125X [27X de := DecompositionEquation(DG,e,sigma);[127X[104X
    [4X[28XDecomposedEquation in [ f11, f21, f12, f22 ][128X[104X
    [4X[25Xgap>[125X [27Xdedj := DecomposedEquationDisjointForm(de);[127X[104X
    [4X[28Xrec( eq := DecomposedEquation in [ f11, f12, f22 ], [128X[104X
    [4X[28X  hom := [ f21 ]"->"[ FreeProductElm of length 3 ] )[128X[104X
    [4X[25Xgap>[125X [27XEquationComponents(dedj.eq);[127X[104X
    [4X[28X[ Equation in [ f11, f12, f22 ], Equation in [  ] ][128X[104X
    [4X[25Xgap>[125X [27Xs := EquationEvaluation(DG,EquationVariables(dedj.eq),[One(Gr),One(Gr),Gr.2]);[127X[104X
    [4X[28XMappingByFunction( GrigorchukGroup*F*F, GrigorchukGroup, function( q ) ... end )[128X[104X
    [4X[25Xgap>[125X [27XIsSolution(s,EquationComponent(dedj.eq,1));[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27Xns := dedj.hom*s;; IsEvaluation(ns);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XForAll(EquationComponents(de),F->IsSolution(ns,F));[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27Xls := LiftSolution(de,e,sigma,ns);;[127X[104X
    [4X[25Xgap>[125X [27XIsSolution(ls,e);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XForAll(EquationVariables(e),x->Equation(G,[x])^ls in Gr);[127X[104X
    [4X[28Xtrue //only good luck[128X[104X
  [4X[32X[104X
  
